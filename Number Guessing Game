import customtkinter as ctk
import random

# App settings
ctk.set_appearance_mode("dark")
ctk.set_default_color_theme("green")

class GuessGameApp(ctk.CTk):
    def __init__(self):
        super().__init__()

        self.title("🎯 Guess The Number Game")
        self.geometry("400x450")
        self.resizable(False, False)

        self.random_number = random.randint(1, 100)
        self.chances = 5

        self._setup_ui()

    def _setup_ui(self):
        self.label_title = ctk.CTkLabel(self, text="🎮 Guess a number (1 - 100)", font=("Roboto", 22, "bold"))
        self.label_title.pack(pady=20)

        self.entry_guess = ctk.CTkEntry(self, placeholder_text="Enter your guess",width=200,font=("Roboto", 18))
        self.entry_guess.pack(pady=10)

        self.button_submit = ctk.CTkButton(self, text="Submit Guess", font=("Roboto", 18), command=self.check_guess)
        self.button_submit.pack(pady=15)

        self.label_result = ctk.CTkLabel(self, text="", font=("Roboto", 16), text_color="lightgray")
        self.label_result.pack(pady=10)

        self.label_chances = ctk.CTkLabel(self, text=f"❤️ Chances Left: {self.chances}", font=("Roboto", 16))
        self.label_chances.pack(pady=5)

        self.restart_button = ctk.CTkButton(self, text="🔄 Play Again", font=("Roboto", 16), command=self.restart_game)
        self.restart_button.pack(pady=20)
        self.restart_button.configure(state="disabled")

    def check_guess(self):
        guess = self.entry_guess.get()
        if not guess.isdigit():
            self.label_result.configure(text="⚠️ Enter a valid number!", text_color="orange")
            return

        guess = int(guess)

        if guess == self.random_number:
            self.label_result.configure(
                text=f"🎉 Woohoo! You guessed it right!\nThe number was {self.random_number}!",
                font=("Roboto", 18, "bold"),
                text_color="lightgreen"
            )
            self.label_chances.configure(text="🥳 YOU WIN!", text_color="lightgreen")
            self._end_game()
        else:
            self.chances -= 1
            hint = "📈 Too high!" if guess > self.random_number else "📉 Too low!"
            self.label_result.configure(text=f"{hint} Try again.", text_color="lightgray")
            self.label_chances.configure(text=f"❤️ Chances Left: {self.chances}", text_color="salmon")

            if self.chances == 0:
                self.label_result.configure(
                    text=f"💀 Out of chances!\nThe number was {self.random_number}.",
                    text_color="red"
                )
                self.label_chances.configure(text="😔 YOU LOST!", text_color="red")
                self._end_game()

    def _end_game(self):
        self.button_submit.configure(state="disabled")
        self.entry_guess.configure(state="disabled")
        self.restart_button.configure(state="normal")

    def restart_game(self):
        self.random_number = random.randint(1, 100)
        self.chances = 5
        self.label_result.configure(text="", text_color="lightgray")
        self.label_chances.configure(text=f"❤️ Chances Left: {self.chances}", text_color="white")
        self.entry_guess.configure(state="normal")
        self.entry_guess.delete(0, ctk.END)
        self.button_submit.configure(state="normal")
        self.restart_button.configure(state="disabled")

if __name__ == "__main__":
    app = GuessGameApp()
    app.mainloop()
